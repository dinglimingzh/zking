# ======================= database configuration ==================
# 数据库连接信息, 同一个部署应该都是一样的
spring.datasource.url=${args.spring.datasource.url}
spring.datasource.username=${args.spring.datasource.username}
spring.datasource.password=${args.spring.datasource.password}

# ======================= redis configuration =====================
spring.redis.host=basic-node1
spring.redis.password=
spring.redis.port=6379

kefu.kafka.producer.properties.bootstrap.servers=${args.kefu.kafka.producer.properties.bootstrap.servers}
kefu.kafka.consumer.properties.zookeeper.connect=${args.kefu.kafka.consumer.properties.zookeeper.connect}

#storage.service.provider.oss.url=http://oss-cn-beijing.aliyuncs.com
storage.service.provider.list=com.easemob.weichat.storage.NFSStorageProvider
storage.service.provider.nfs.root=/data/apps/opt/MediaFiles/

# ======================= ganglia report ==========================
# metrics report 到ganglia的地址和端口, 留空的话则不会report到ganglia
# 等于之前的  -Dreporter.ganglia.host=sdb-ali-hangzhou-log -Dreporter.ganglia.port=8684
reporter.ganglia.host=
# 注意, 这个属性需要或者不存在或者给一个数字的值, 不能留空
reporter.ganglia.port=8649


statsd.prefix=${spring.application.name}
statsd.hostIP=127.0.0.1
statsd.hostPort=8125

# ======================= thrift server configuration =============
#thrift server 启动的ip地址, 因为现在web和connector(thrift server是connector启动的)是一对一, 部署在同一个机器上的
#所以这个也不需要修改
#weichat.thrift.server.host=im-sv01
#thrift server 启动的端口号
#weichat.thrift.server.port=9999

#====================domain==================
kf.web.domain=http://kefurobot.zking.com
kf.web.domain.organId=1
kf.web.domain.organName=easemob


# ======================= thrift server with use kafka configuration =============
#thrift server 启动的ip地址, 使用kafka读取客服消息时，需要在每一个kafka集群上启动一个consumer及对应的thriftserver供客服系统调用，不是kafka读取模式不需要特意设置
#对应在beijing集群上启动kafka consumer及其thriftserver的ip,该IP需要为公网IP
weichat.thrift.server.beijing.host=127.0.0.1
#thrift server 启动的端口号
weichat.thrift.server.beijing.port=9813
#对应在vip1集群上启动kafka consumer及其thriftserver的ip,该IP需要为公网IP
weichat.thrift.server.vip1.host=127.0.0.1
#thrift server 启动的端口号
weichat.thrift.server.vip1.port=9814


#部署好的HTTP代理服务器，需要在微信第三方平台的IP白名单中
weichat.weixin.open.http.proxy.enable=false
weichat.weixin.open.http.proxy.host=127.0.0.1
weichat.weixin.open.http.proxy.port=18888

easemob.app.dns.address=http://console.zking.com/server.xml
easemob.app.dns.address.alternative=http://console.zking.com/server.xml

# ================ third party robot config ===========================
kf.third-party.robot.enable=true
kf.third-party.robot.tenantId=1411
kf.third-party.robot.application.url=chat-bot.zhongan.com
kf.third-party.robot.application.name=thirdpartyrobot


kefu.server.nginx.url=http://${kf.web.domain}

#=====================application-wechat=========================
# 设置好客服系统的域名，给微博发送图片时获取图片地址使用
weichat.webserver.host=http://kefurobot.zking.com

# ======================= 微博微信 configuration =============
#环信在微信开放平台上开通的第三方平台[环信移动客服]对应的appId
weichat.weixin.open.component_appid=wxd296f9605fee5e76
#环信在微信开放平台上开通的第三方平台[环信移动客服]对应的appsecret
weichat.weixin.open.component_appsecret=0c79e1fa963cd80cc0be99b20a18faeb
#公众号消息校验Token
weichat.weixin.open.token=test1234567890nihao
#公众号消息加解密Key
weichat.weixin.open.encodingaeskey=f5bLeik5BmeQ5OnvmGIloGwx2IWVQ3LmoA5m2MPMpNK
#环信官方微博创建的微应用【环信在线】的appkey
weichat.weibo.appkey=869840255
#环信官方微博创建的微应用【环信在线】的setcret
weichat.weibo.app_secret=79a68a6a61d5023d6729795b17dcaee1

# 微博批量获取用户信息接口所需的token，由新浪微博协助申请的，有效期5年
weichat.weibo.show_batch.token=2.00VZpNSEUlniiB2a1cf6adc2Gmu91E


spring.rabbitmq.addresses=${args.kf.push-data.rabbitmq.addresses}
spring.rabbitmq.username=${args.kf.push-data.rabbitmq.username}
spring.rabbitmq.password=${args.kf.push-data.rabbitmq.password}

